scalar Time

"""Пользователь"""
type User {
    id: Int!
    vkUserId: Int!
    avatar: String
    firstName: String
    lastName: String
}

"""Единица"""
type Unit {
    id: Int!
    """Заголовок"""
    title: String!
    """Картинка"""
    imgUrl: String!
}

"""Статистика"""
type Picked {
    """Общее количество"""
    count: Int!
    """Друзей выбрало"""
    friendsCount: Int!
    """Рандоманые пользователи"""
    users: [User!]!
}

"""Пара единиц"""
type Pair {
    id: Int!
    """Первая единица"""
    unitOne: Unit!
    """Вттораая единица"""
    unitTwo: Unit!
    """Статистика по первой единице"""
    unitOnePicked: Picked!
    """Статистика по второй единице"""
    unitTwoPicked: Picked!
}

"""Баттл"""
type Battle {
    id: Int!
    title: String!
}

"""Рануд"""
type Round {
    id: Int!
    step: Int!
}

# Define queries here
type Query {
    """Авторизованный пользователь"""
    currentUser: User
    """Получить баттлы"""
    getActiveBattles: [Battle!]!
    """Получить раунд"""
    getRound(roundId: Int!): [Pair!]!
}

type Mutation {
    """Начать баттл"""
    startBattle(battleId: Int!): [Round!]!
    """Сделать выбор единицы"""
    makePick(pairId: Int!, unitId: Int!): Boolean
}